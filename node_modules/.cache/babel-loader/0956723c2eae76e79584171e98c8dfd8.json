{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minht\\\\OneDrive\\\\Desktop\\\\web-test\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    styleSquare: props.styleSquare,\n    onClick: () => props.onClick(),\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this);\n} // class Board extends React.Component {\n//     renderSquare(i) {\n//         return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\n//     }\n//     renderWinSquare(i) {\n//         return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} styleSquare={{color: 'red'}}/>;\n//     }\n//     render() {\n//         const winStreak = this.props.winStreak;\n//         let board = []\n//         for (let i = 0; i < 3; i++) {\n//             let row = []\n//             for (let j = 0; j < 3; j++) {\n//                 // if(winStreak) {\n//                 //     if (winStreak.indexOf(j * 3 + i) != -1) {\n//                 //         row.push(this.renderWinSquare(j * 3 + i))\n//                 //     }\n//                 //     else {\n//                 //         row.push(this.renderSquare(j * 3 + i))\n//                 //     }\n//                 //     continue\n//                 // }\n//                 row.push(this.renderSquare(i * 3 + j))\n//             }\n//             board.push(<div className=\"board-row\">{row}</div>)\n//         }\n//         return(\n//             <div>\n//                 {board}\n//             </div>\n//         )\n//     }\n// }\n\n\n_c = Square;\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        posX: null,\n        posY: null\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isReverse: false,\n      winStreak: null\n    };\n  }\n\n  calculateWinner(squares) {\n    const winLine = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < winLine.length; i++) {\n      const [a, b, c] = winLine[i];\n\n      if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) {\n        return {\n          winner: squares[a],\n          winStreak: winLine[i]\n        };\n      }\n    }\n\n    return null;\n  }\n\n  jumpTo(stepNumber) {\n    this.setState({\n      stepNumber: stepNumber,\n      xIsNext: stepNumber % 2 === 0\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    console.log(current);\n    console.log(this.calculateWinner(squares));\n\n    if (this.calculateWinner(current) || squares[i]) {\n      return;\n    } // if (this.calculateWinner(current) != null) {\n    //     if (this.calculateWinner(current).winner != null) {\n    //         return\n    //     }\n    // }\n\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        posX: Math.floor(i / 3),\n        posY: i % 3\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const resultCaculateWinner = this.calculateWinner(current.squares);\n    let winner = null;\n    let winStreak = [];\n\n    if (resultCaculateWinner) {\n      winner = this.calculateWinner(current.squares).winner;\n      winStreak = this.calculateWinner(current.squares).winStreak;\n    }\n\n    const isReverse = this.state.isReverse;\n    const bold = {\n      fontWeight: 'bold'\n    };\n    const normal = {\n      fontWeight: 'normal'\n    };\n    const moves = history.map((step, move) => {\n      const posX = this.state.history[move].posX;\n      const posY = this.state.history[move].posY;\n      const key = `${posX}, ${posY}`;\n      const desc = move ? 'Go to move #' + move + `(${posX}, ${posY})` : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          style: this.state.stepNumber === move ? bold : normal,\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (resultCaculateWinner) {\n      status = 'The winner is: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          winStreak: winStreak\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.sortMoves(),\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: !isReverse ? moves : moves.reverse()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n\n  sortMoves() {\n    this.setState({\n      isReverse: !this.state.isReverse\n    });\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 175,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/Users/minht/OneDrive/Desktop/web-test/src/index.js"],"names":["React","ReactDOM","Square","props","styleSquare","onClick","value","Game","Component","constructor","state","history","squares","Array","fill","posX","posY","stepNumber","xIsNext","isReverse","winStreak","calculateWinner","winLine","i","length","a","b","c","winner","jumpTo","setState","handleClick","slice","current","console","log","concat","Math","floor","render","resultCaculateWinner","bold","fontWeight","normal","moves","map","step","move","key","desc","status","sortMoves","reverse","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (<button className=\"square\" styleSquare={props.styleSquare} onClick={() => props.onClick()}>\r\n        {props.value}\r\n    </button>)\r\n}\r\n\r\n// class Board extends React.Component {\r\n//     renderSquare(i) {\r\n//         return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)}/>;\r\n//     }\r\n//     renderWinSquare(i) {\r\n//         return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} styleSquare={{color: 'red'}}/>;\r\n//     }\r\n//     render() {\r\n//         const winStreak = this.props.winStreak;\r\n//         let board = []\r\n//         for (let i = 0; i < 3; i++) {\r\n//             let row = []\r\n//             for (let j = 0; j < 3; j++) {\r\n//                 // if(winStreak) {\r\n//                 //     if (winStreak.indexOf(j * 3 + i) != -1) {\r\n//                 //         row.push(this.renderWinSquare(j * 3 + i))\r\n//                 //     }\r\n//                 //     else {\r\n//                 //         row.push(this.renderSquare(j * 3 + i))\r\n//                 //     }\r\n//                 //     continue\r\n//                 // }\r\n//                 row.push(this.renderSquare(i * 3 + j))\r\n//             }\r\n//             board.push(<div className=\"board-row\">{row}</div>)\r\n//         }\r\n//         return(\r\n//             <div>\r\n//                 {board}\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n                posX: null,\r\n                posY: null\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            isReverse: false,\r\n            winStreak: null\r\n        }\r\n    }\r\n    calculateWinner(squares) {\r\n        const winLine = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6]\r\n        ]\r\n        for (let i = 0; i < winLine.length; i++) {\r\n            const [a, b, c] = winLine[i];\r\n            if (squares[a] && squares[a] == squares[b] && squares[a] == squares[c]) {\r\n                return {\r\n                    winner: squares[a],\r\n                    winStreak: winLine[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    }\r\n    jumpTo(stepNumber) {\r\n        this.setState({\r\n            stepNumber: stepNumber,\r\n            xIsNext: (stepNumber % 2) === 0\r\n        })\r\n    }\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\r\n        const current = history[history.length - 1]\r\n        const squares = current.squares.slice()\r\n        console.log(current)\r\n        console.log(this.calculateWinner(squares))\r\n        if(this.calculateWinner(current) || squares[i]) {\r\n            return;\r\n        }\r\n        // if (this.calculateWinner(current) != null) {\r\n        //     if (this.calculateWinner(current).winner != null) {\r\n        //         return\r\n        //     }\r\n        // }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n                posX: Math.floor(i / 3),\r\n                posY: i % 3,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        })\r\n    }\r\n    render() {\r\n        const history = this.state.history\r\n        const current = history[this.state.stepNumber]\r\n        const resultCaculateWinner = this.calculateWinner(current.squares);\r\n        let winner = null;\r\n        let winStreak = [];\r\n        if (resultCaculateWinner) {\r\n            winner = this.calculateWinner(current.squares).winner\r\n            winStreak = this.calculateWinner(current.squares).winStreak\r\n        }\r\n\r\n        const isReverse = this.state.isReverse;\r\n\r\n        const bold = {\r\n            fontWeight: 'bold'\r\n        }\r\n\r\n        const normal = {\r\n            fontWeight: 'normal'\r\n        }\r\n\r\n        const moves = history.map((step, move) => {\r\n            const posX = this.state.history[move].posX;\r\n            const posY = this.state.history[move].posY;\r\n            const key = `${posX}, ${posY}`\r\n            const desc = move ? 'Go to move #' + move + `(${posX}, ${posY})` : 'Go to game start';\r\n            return (\r\n                <li key={key}>\r\n                    <button onClick={() => this.jumpTo(move)} style={this.state.stepNumber === move ? bold : normal}>{desc}</button>\r\n                </li>\r\n            )\r\n        })\r\n        let status;\r\n        if (resultCaculateWinner) {\r\n            status = 'The winner is: ' + winner;\r\n        }\r\n        else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} winStreak={winStreak}/>\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <button onClick={()=>this.sortMoves()}>Sort</button>\r\n                    <ol>{!isReverse ? moves : moves.reverse()}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    sortMoves() {\r\n        this.setState({\r\n            isReverse: !this.state.isReverse\r\n        })\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n"]},"metadata":{},"sourceType":"module"}